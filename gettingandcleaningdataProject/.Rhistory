rm(combinedtrainingsetData)
head(tidyDataSet)
summary(tidyDataSet)
class(trainingLabels)
##Load each data set.
##Include labels and activity labels.
trainingsetData <- read.table("./data/getdata_projectfiles_UCI HAR Dataset/UCI HAR Dataset/train/X_train.txt")
trainingLabels <- read.table("./data/getdata_projectfiles_UCI HAR Dataset/UCI HAR Dataset/train/y_train.txt")
trainingSubjects <- read.table("./data/getdata_projectfiles_UCI HAR Dataset/UCI HAR Dataset/train/subject_train.txt")
testsetData <- read.table("./data/getdata_projectfiles_UCI HAR Dataset/UCI HAR Dataset/test/X_test.txt")
testLabels <- read.table("./data/getdata_projectfiles_UCI HAR Dataset/UCI HAR Dataset/test/y_test.txt")
testSubjects <- read.table("./data/getdata_projectfiles_UCI HAR Dataset/UCI HAR Dataset/test/subject_test.txt")
activityLabels <-read.table("./data/getdata_projectfiles_UCI HAR Dataset/UCI HAR Dataset/activity_labels.txt")
featuresLabels <- read.table("./data/getdata_projectfiles_UCI HAR Dataset/UCI HAR Dataset/features.txt")
#Assign each activity row record to each subject
trainingLabels <- cbind(trainingSubjects,trainingLabels)
##Load each data set.
##Include labels and activity labels.
trainingsetData <- read.table("./data/getdata_projectfiles_UCI HAR Dataset/UCI HAR Dataset/train/X_train.txt")
trainingLabels <- read.table("./data/getdata_projectfiles_UCI HAR Dataset/UCI HAR Dataset/train/y_train.txt")
trainingSubjects <- read.table("./data/getdata_projectfiles_UCI HAR Dataset/UCI HAR Dataset/train/subject_train.txt")
testsetData <- read.table("./data/getdata_projectfiles_UCI HAR Dataset/UCI HAR Dataset/test/X_test.txt")
testLabels <- read.table("./data/getdata_projectfiles_UCI HAR Dataset/UCI HAR Dataset/test/y_test.txt")
testSubjects <- read.table("./data/getdata_projectfiles_UCI HAR Dataset/UCI HAR Dataset/test/subject_test.txt")
activityLabels <-read.table("./data/getdata_projectfiles_UCI HAR Dataset/UCI HAR Dataset/activity_labels.txt")
featuresLabels <- read.table("./data/getdata_projectfiles_UCI HAR Dataset/UCI HAR Dataset/features.txt")
#Assign each activity row record to each subject
trainingsetData <- cbind(trainingSubjects,trainingsetData)
testsetData <- cbind(testSubjects,testsetData)
View(testsetData)
View(testsetData)
##Load each data set.
##Include labels and activity labels.
trainingsetData <- read.table("./data/getdata_projectfiles_UCI HAR Dataset/UCI HAR Dataset/train/X_train.txt")
trainingLabels <- read.table("./data/getdata_projectfiles_UCI HAR Dataset/UCI HAR Dataset/train/y_train.txt")
trainingSubjects <- read.table("./data/getdata_projectfiles_UCI HAR Dataset/UCI HAR Dataset/train/subject_train.txt")
testsetData <- read.table("./data/getdata_projectfiles_UCI HAR Dataset/UCI HAR Dataset/test/X_test.txt")
testLabels <- read.table("./data/getdata_projectfiles_UCI HAR Dataset/UCI HAR Dataset/test/y_test.txt")
testSubjects <- read.table("./data/getdata_projectfiles_UCI HAR Dataset/UCI HAR Dataset/test/subject_test.txt")
activityLabels <-read.table("./data/getdata_projectfiles_UCI HAR Dataset/UCI HAR Dataset/activity_labels.txt")
featuresLabels <- read.table("./data/getdata_projectfiles_UCI HAR Dataset/UCI HAR Dataset/features.txt")
#Assign each activity row record to each subject
trainingsetData <- cbind("Subject"=trainingSubjects,trainingsetData)
testsetData <- cbind("Subject"=testSubjects,testsetData)
View(testsetData)
View(testsetData)
##Load each data set.
##Include labels and activity labels.
trainingsetData <- read.table("./data/getdata_projectfiles_UCI HAR Dataset/UCI HAR Dataset/train/X_train.txt")
trainingLabels <- read.table("./data/getdata_projectfiles_UCI HAR Dataset/UCI HAR Dataset/train/y_train.txt")
trainingSubjects <- read.table("./data/getdata_projectfiles_UCI HAR Dataset/UCI HAR Dataset/train/subject_train.txt")
testsetData <- read.table("./data/getdata_projectfiles_UCI HAR Dataset/UCI HAR Dataset/test/X_test.txt")
testLabels <- read.table("./data/getdata_projectfiles_UCI HAR Dataset/UCI HAR Dataset/test/y_test.txt")
testSubjects <- read.table("./data/getdata_projectfiles_UCI HAR Dataset/UCI HAR Dataset/test/subject_test.txt")
activityLabels <-read.table("./data/getdata_projectfiles_UCI HAR Dataset/UCI HAR Dataset/activity_labels.txt")
featuresLabels <- read.table("./data/getdata_projectfiles_UCI HAR Dataset/UCI HAR Dataset/features.txt")
#Assign each activity row record to each subject
trainingsetData <- cbind("Subject"=trainingSubjects$V1,trainingsetData)
testsetData <- cbind("Subject"=testSubjects$V1,testsetData)
View(testsetData)
View(testsetData)
##Load each data set.
##Include labels and activity labels.
trainingsetData <- read.table("./data/getdata_projectfiles_UCI HAR Dataset/UCI HAR Dataset/train/X_train.txt")
trainingLabels <- read.table("./data/getdata_projectfiles_UCI HAR Dataset/UCI HAR Dataset/train/y_train.txt")
trainingSubjects <- read.table("./data/getdata_projectfiles_UCI HAR Dataset/UCI HAR Dataset/train/subject_train.txt")
testsetData <- read.table("./data/getdata_projectfiles_UCI HAR Dataset/UCI HAR Dataset/test/X_test.txt")
testLabels <- read.table("./data/getdata_projectfiles_UCI HAR Dataset/UCI HAR Dataset/test/y_test.txt")
testSubjects <- read.table("./data/getdata_projectfiles_UCI HAR Dataset/UCI HAR Dataset/test/subject_test.txt")
activityLabels <-read.table("./data/getdata_projectfiles_UCI HAR Dataset/UCI HAR Dataset/activity_labels.txt")
featuresLabels <- read.table("./data/getdata_projectfiles_UCI HAR Dataset/UCI HAR Dataset/features.txt")
#Assign each activity row record to each subject
trainingsetData <- cbind("Subject"=trainingSubjects$V1,trainingsetData)
testsetData <- cbind("Subject"=testSubjects$V1,testsetData)
##Merge each data set labels with activity labels.
mergedtrainingLabels <- merge.data.frame(trainingLabels,activityLabels,by.x = "V1",by.y = "V1",all=TRUE)
mergedtestLabels <- merge.data.frame(testLabels,activityLabels,by.x = "V1",by.y = "V1",all=TRUE)
##Remove Unused Objects from workspace
rm(activityLabels)
rm(testLabels)
rm(trainingLabels)
names(testsetData) <- featuresLabels$V2
combinedtestsetData <- cbind("Activity"=mergedtestLabels$V2,testsetData)
names(trainingsetData) <- featuresLabels$V2
combinedtrainingsetData <- cbind("Activity"=mergedtrainingLabels$V2,trainingsetData)
rm(testsetData)
rm(trainingsetData)
rm(featuresLabels)
rm(mergedtestLabels)
rm(mergedtrainingLabels)
tidyDataSet <- rbind(combinedtestsetData,combinedtrainingsetData)
rm(combinedtestsetData)
rm(combinedtrainingsetData)
View(testSubjects)
View(tidyDataSet)
View(tidyDataSet)
##Load each data set.
##Include labels and activity labels.
trainingsetData <- read.table("./data/getdata_projectfiles_UCI HAR Dataset/UCI HAR Dataset/train/X_train.txt")
trainingLabels <- read.table("./data/getdata_projectfiles_UCI HAR Dataset/UCI HAR Dataset/train/y_train.txt")
trainingSubjects <- read.table("./data/getdata_projectfiles_UCI HAR Dataset/UCI HAR Dataset/train/subject_train.txt")
testsetData <- read.table("./data/getdata_projectfiles_UCI HAR Dataset/UCI HAR Dataset/test/X_test.txt")
testLabels <- read.table("./data/getdata_projectfiles_UCI HAR Dataset/UCI HAR Dataset/test/y_test.txt")
testSubjects <- read.table("./data/getdata_projectfiles_UCI HAR Dataset/UCI HAR Dataset/test/subject_test.txt")
activityLabels <-read.table("./data/getdata_projectfiles_UCI HAR Dataset/UCI HAR Dataset/activity_labels.txt")
featuresLabels <- read.table("./data/getdata_projectfiles_UCI HAR Dataset/UCI HAR Dataset/features.txt")
#Assign each activity row record to each subject
trainingsetData <- cbind("Subject"=trainingSubjects$V1,trainingsetData)
testsetData <- cbind("Subject"=testSubjects$V1,testsetData)
rm(trainingSubjects)
rm(testSubjects)
##Merge each data set labels with activity labels.
mergedtrainingLabels <- merge.data.frame(trainingLabels,activityLabels,by.x = "V1",by.y = "V1",all=TRUE)
mergedtestLabels <- merge.data.frame(testLabels,activityLabels,by.x = "V1",by.y = "V1",all=TRUE)
##Remove Unused Objects from workspace
rm(activityLabels)
rm(testLabels)
rm(trainingLabels)
names(testsetData) <- featuresLabels$V2
combinedtestsetData <- cbind("Activity"=mergedtestLabels$V2,testsetData)
names(trainingsetData) <- featuresLabels$V2
combinedtrainingsetData <- cbind("Activity"=mergedtrainingLabels$V2,trainingsetData)
rm(testsetData)
rm(trainingsetData)
rm(featuresLabels)
rm(mergedtestLabels)
rm(mergedtrainingLabels)
tidyDataSet <- rbind(combinedtestsetData,combinedtrainingsetData)
rm(combinedtestsetData)
rm(combinedtrainingsetData)
View(tidyDataSet)
View(tidyDataSet)
##Load each data set.
##Include labels and activity labels.
trainingsetData <- read.table("./data/getdata_projectfiles_UCI HAR Dataset/UCI HAR Dataset/train/X_train.txt")
trainingLabels <- read.table("./data/getdata_projectfiles_UCI HAR Dataset/UCI HAR Dataset/train/y_train.txt")
trainingSubjects <- read.table("./data/getdata_projectfiles_UCI HAR Dataset/UCI HAR Dataset/train/subject_train.txt")
testsetData <- read.table("./data/getdata_projectfiles_UCI HAR Dataset/UCI HAR Dataset/test/X_test.txt")
testLabels <- read.table("./data/getdata_projectfiles_UCI HAR Dataset/UCI HAR Dataset/test/y_test.txt")
testSubjects <- read.table("./data/getdata_projectfiles_UCI HAR Dataset/UCI HAR Dataset/test/subject_test.txt")
activityLabels <-read.table("./data/getdata_projectfiles_UCI HAR Dataset/UCI HAR Dataset/activity_labels.txt")
featuresLabels <- read.table("./data/getdata_projectfiles_UCI HAR Dataset/UCI HAR Dataset/features.txt")
#Assign each activity row record to each subject
trainingsetData <- cbind("Subject"=trainingSubjects$V1,trainingsetData)
testsetData <- cbind("Subject"=testSubjects$V1,testsetData)
rm(trainingSubjects)
rm(testSubjects)
##Merge each data set labels with activity labels.
mergedtrainingLabels <- merge.data.frame(trainingLabels,activityLabels,by.x = "V1",by.y = "V1",all=TRUE)
mergedtestLabels <- merge.data.frame(testLabels,activityLabels,by.x = "V1",by.y = "V1",all=TRUE)
##Remove Unused Objects from workspace
rm(activityLabels)
rm(testLabels)
rm(trainingLabels)
testsetData[-1:562]
testsetData(-1:562)
testsetData[,(-1:562)]
testsetData[,(2:562)]
names(testsetData[,-match(c("Activity", "Subject"))]) <- featuresLabels$V2
names(testsetData[,-("Activity", "Subject")]) <- featuresLabels$V2
names(testsetData[,-1:2]) <- featuresLabels$V2
names(testsetData[,-1:-2]) <- featuresLabels$V2
names(testsetData[,-1]) <- featuresLabels$V2
View(testsetData)
View(testsetData)
##Load each data set.
##Include labels and activity labels.
trainingsetData <- read.table("./data/getdata_projectfiles_UCI HAR Dataset/UCI HAR Dataset/train/X_train.txt")
trainingLabels <- read.table("./data/getdata_projectfiles_UCI HAR Dataset/UCI HAR Dataset/train/y_train.txt")
trainingSubjects <- read.table("./data/getdata_projectfiles_UCI HAR Dataset/UCI HAR Dataset/train/subject_train.txt")
testsetData <- read.table("./data/getdata_projectfiles_UCI HAR Dataset/UCI HAR Dataset/test/X_test.txt")
testLabels <- read.table("./data/getdata_projectfiles_UCI HAR Dataset/UCI HAR Dataset/test/y_test.txt")
testSubjects <- read.table("./data/getdata_projectfiles_UCI HAR Dataset/UCI HAR Dataset/test/subject_test.txt")
activityLabels <-read.table("./data/getdata_projectfiles_UCI HAR Dataset/UCI HAR Dataset/activity_labels.txt")
featuresLabels <- read.table("./data/getdata_projectfiles_UCI HAR Dataset/UCI HAR Dataset/features.txt")
#Assign each activity row record to each subject
trainingsetData <- cbind("Subject"=trainingSubjects$V1,trainingsetData)
testsetData <- cbind("Subject"=testSubjects$V1,testsetData)
rm(trainingSubjects)
rm(testSubjects)
names(testsetData) <- featuresLabels$V2
names(trainingsetData) <- featuresLabels$V2
##Merge each data set labels with activity labels.
mergedtrainingLabels <- merge.data.frame(trainingLabels,activityLabels,by.x = "V1",by.y = "V1",all=TRUE)
mergedtestLabels <- merge.data.frame(testLabels,activityLabels,by.x = "V1",by.y = "V1",all=TRUE)
##Remove Unused Objects from workspace
rm(activityLabels)
rm(testLabels)
rm(trainingLabels)
combinedtestsetData <- cbind("Activity"=mergedtestLabels$V2,testsetData)
combinedtrainingsetData <- cbind("Activity"=mergedtrainingLabels$V2,trainingsetData)
rm(testsetData)
rm(trainingsetData)
rm(featuresLabels)
rm(mergedtestLabels)
rm(mergedtrainingLabels)
tidyDataSet <- rbind(combinedtestsetData,combinedtrainingsetData)
rm(combinedtestsetData)
rm(combinedtrainingsetData)
View(tidyDataSet)
View(tidyDataSet)
##Load each data set.
##Include labels and activity labels.
trainingsetData <- read.table("./data/getdata_projectfiles_UCI HAR Dataset/UCI HAR Dataset/train/X_train.txt")
trainingLabels <- read.table("./data/getdata_projectfiles_UCI HAR Dataset/UCI HAR Dataset/train/y_train.txt")
trainingSubjects <- read.table("./data/getdata_projectfiles_UCI HAR Dataset/UCI HAR Dataset/train/subject_train.txt")
testsetData <- read.table("./data/getdata_projectfiles_UCI HAR Dataset/UCI HAR Dataset/test/X_test.txt")
testLabels <- read.table("./data/getdata_projectfiles_UCI HAR Dataset/UCI HAR Dataset/test/y_test.txt")
testSubjects <- read.table("./data/getdata_projectfiles_UCI HAR Dataset/UCI HAR Dataset/test/subject_test.txt")
activityLabels <-read.table("./data/getdata_projectfiles_UCI HAR Dataset/UCI HAR Dataset/activity_labels.txt")
featuresLabels <- read.table("./data/getdata_projectfiles_UCI HAR Dataset/UCI HAR Dataset/features.txt")
#Assign each activity row record to each subject
trainingsetData <- cbind("Subject"=trainingSubjects$V1,trainingsetData)
testsetData <- cbind("Subject"=testSubjects$V1,testsetData)
rm(trainingSubjects)
rm(testSubjects)
##Load each data set.
##Include labels and activity labels.
trainingsetData <- read.table("./data/getdata_projectfiles_UCI HAR Dataset/UCI HAR Dataset/train/X_train.txt")
trainingLabels <- read.table("./data/getdata_projectfiles_UCI HAR Dataset/UCI HAR Dataset/train/y_train.txt")
trainingSubjects <- read.table("./data/getdata_projectfiles_UCI HAR Dataset/UCI HAR Dataset/train/subject_train.txt")
testsetData <- read.table("./data/getdata_projectfiles_UCI HAR Dataset/UCI HAR Dataset/test/X_test.txt")
testLabels <- read.table("./data/getdata_projectfiles_UCI HAR Dataset/UCI HAR Dataset/test/y_test.txt")
testSubjects <- read.table("./data/getdata_projectfiles_UCI HAR Dataset/UCI HAR Dataset/test/subject_test.txt")
activityLabels <-read.table("./data/getdata_projectfiles_UCI HAR Dataset/UCI HAR Dataset/activity_labels.txt")
featuresLabels <- read.table("./data/getdata_projectfiles_UCI HAR Dataset/UCI HAR Dataset/features.txt")
names(testsetData) <- featuresLabels$V2
names(trainingsetData) <- featuresLabels$V2
#Assign each activity row record to each subject
trainingsetData <- cbind("Subject"=trainingSubjects$V1,trainingsetData)
testsetData <- cbind("Subject"=testSubjects$V1,testsetData)
rm(trainingSubjects)
rm(testSubjects)
View(trainingsetData)
View(trainingsetData)
##Load each data set.
##Include labels and activity labels.
trainingsetData <- read.table("./data/getdata_projectfiles_UCI HAR Dataset/UCI HAR Dataset/train/X_train.txt")
trainingLabels <- read.table("./data/getdata_projectfiles_UCI HAR Dataset/UCI HAR Dataset/train/y_train.txt")
trainingSubjects <- read.table("./data/getdata_projectfiles_UCI HAR Dataset/UCI HAR Dataset/train/subject_train.txt")
testsetData <- read.table("./data/getdata_projectfiles_UCI HAR Dataset/UCI HAR Dataset/test/X_test.txt")
testLabels <- read.table("./data/getdata_projectfiles_UCI HAR Dataset/UCI HAR Dataset/test/y_test.txt")
testSubjects <- read.table("./data/getdata_projectfiles_UCI HAR Dataset/UCI HAR Dataset/test/subject_test.txt")
activityLabels <-read.table("./data/getdata_projectfiles_UCI HAR Dataset/UCI HAR Dataset/activity_labels.txt")
featuresLabels <- read.table("./data/getdata_projectfiles_UCI HAR Dataset/UCI HAR Dataset/features.txt")
#Assign variable name to each column
names(testsetData) <- featuresLabels$V2
names(trainingsetData) <- featuresLabels$V2
#Assign each activity row record to each subject
trainingsetData <- cbind("Subject"=trainingSubjects$V1,trainingsetData)
testsetData <- cbind("Subject"=testSubjects$V1,testsetData)
rm(trainingSubjects)
rm(testSubjects)
##Merge each data set labels with activity labels.
mergedtrainingLabels <- merge.data.frame(trainingLabels,activityLabels,by.x = "V1",by.y = "V1",all=TRUE)
mergedtestLabels <- merge.data.frame(testLabels,activityLabels,by.x = "V1",by.y = "V1",all=TRUE)
##Remove Unused Objects from workspace
rm(activityLabels)
rm(testLabels)
rm(trainingLabels)
combinedtestsetData <- cbind("Activity"=mergedtestLabels$V2,testsetData)
combinedtrainingsetData <- cbind("Activity"=mergedtrainingLabels$V2,trainingsetData)
rm(testsetData)
rm(trainingsetData)
rm(featuresLabels)
rm(mergedtestLabels)
rm(mergedtrainingLabels)
tidyDataSet <- rbind(combinedtestsetData,combinedtrainingsetData)
rm(combinedtestsetData)
rm(combinedtrainingsetData)
View(tidyDataSet)
View(tidyDataSet)
head(tidyDataSet)
View(tidyDataSet)
View(tidyDataSet)
?grepl
grepl(c("Activity","Subject","^mean()","^std()"), names(tidyDataSet))
tidyData.common <- tidyDataSet[,c(grep("Activity|Subject|^mean()|^std()",names(tidyDataSet))), drop=F]
View(tidyData.common)
View(tidyData.common)
View(tidyData.common)
tidyData.common <- select(tidyDataSet,contains("mean()","Activity","Subject","std()"))
library("dplyr")
tidyData.common <- select(tidyDataSet,contains("mean()","Activity","Subject","std()"))
?select
tidyData.common <- select(tidyDataSet,contains("mean()")||contains("std()"))
tidyData.common <- select(tidyDataSet,contains("mean()")|contains("std()"))
tidyData.common <- select(tidyDataSet,contains("Activity|Subject|mean|std")))
tidyData.common <- select(tidyDataSet,contains("Activity|Subject|mean|std"))
tidyData.common <- select(tidyDataSet,contains("Activity|Subject|mean|std"))
codebook(tidyDataSet)
library(memisc)
install.packages(memisc)
install.packages("memisc")
library(memisc)
codebook(tidyDataSet)
head(tidyDataSet)
Data <- within(tidyDataSet,{
description(activity) <- "Activity"
description(region) <- "Region de residencia"
description(ingresos) <- "Ingreso del hogar"
wording(voto) <- "Si las elecciones generales ocurrieran el proximo martes, por cual candidato votaria usted?"
wording(ingresos) <- "Cuanto ingreso se obtiene en cada hogar, contando y sumando todas las fuentes mencionadas"
foreach(x=c(voto,region),{
measurement(x) <- "nominal"
})
measurement(ingresos) <- "ratio"
labels(voto) <- c(
Conservadores            =  1,
Laboristas               =  2,
"Democratas liberales"   =  3,
"No se"                  =  8,
"No constesta"           =  9,
"No aplica"              = 97,
"NA"                     = 99)
labels(region) <- c(
"Gran Caracas"             =  1,
"Oriente"                  =  2,
"Occidente"                =  3,
"No aplica"              = 97,
"NA"                     = 99)
foreach(x=c(voto,region,ingresos),{
annotation(x)["Aclaratoria"] <- "Este no es un item de una encuentas real, eh? ..."
})
missing.values(voto) <- c(8,9,97,99)
missing.values(region) <- c(97,99)
})
View(tidyDataSet)
View(tidyDataSet)
pattern <- c("mean", "std", "Activity","Subject")
tidyData.common <- Reduce(`&`, lapply(pattern, grepl, tidyDataSet))
View(tidyData.common)
pattern <- c("*mean*", "*std*", "Activity","Subject")
tidyData.common <- Reduce(`&`, lapply(pattern, grepl, tidyDataSet))
tidyDataSet[,tidyData.common]
tidyDataSet[tidyData.common,]
rm(tidyData.common)
rm(pattern)
?grepl
grepl(^(Activity|Subject|[*std()*]|[*mean()*]),tidyDataSet)
grepl((Activity|Subject|[*std()*]|[*mean()*]),tidyDataSet)
grepl("['std()]", tidyDataSet, invert=TRUE)
grepl("['std()]", tidyDataSet)
test <- tidyDataSet[,grepl("['std()]", tidyDataSet)]
test <- tidyDataSet[grepl("['std()]", tidyDataSet),]
test <- tidyDataSet[grepl("['std()]", tidyDataSet),tidyDataSet]
test <- subset(tidyDataSet, select = grep("Activity|Subject|std()|mean()", names(tidyDataSet)))
View(test)
View(test)
test <- subset(tidyDataSet, select = grep("Activity|Subject|std()|mean()", names(tidyDataSet)),ignore.case = FALSE,fixed=TRUE)
test <- subset(tidyDataSet, select = grep("Activity|Subject|std()|/(mean)n/", names(tidyDataSet)),ignore.case = FALSE,fixed=TRUE)
View(test)
View(test)
test <- subset(tidyDataSet, select = grep("Activity|Subject|std()|\\mean()", names(tidyDataSet)),ignore.case = FALSE,fixed=TRUE)
test <- subset(tidyDataSet, select = grep("Activity|Subject|std()|[^mean]", names(tidyDataSet)),ignore.case = FALSE,fixed=TRUE)
test <- subset(tidyDataSet, select = grep("Activity|Subject|std()|[mean]", names(tidyDataSet)),ignore.case = FALSE,fixed=TRUE)
test <- subset(tidyDataSet, select = grep("Activity|Subject|std()|mean()", names(tidyDataSet)),ignore.case = FALSE,fixed=TRUE)
test <- subset(tidyDataSet, select = grep("Activity|Subject|std()|mean()-", names(tidyDataSet)),ignore.case = FALSE,fixed=TRUE)
test <- subset(tidyDataSet, select = grep("Activity|Subject|std()|(mean)()", names(tidyDataSet)),ignore.case = FALSE,fixed=TRUE)
View(test)
View(test)
##Load each data set.
##Include labels and activity labels.
trainingsetData <- read.table("./data/getdata_projectfiles_UCI HAR Dataset/UCI HAR Dataset/train/X_train.txt")
trainingLabels <- read.table("./data/getdata_projectfiles_UCI HAR Dataset/UCI HAR Dataset/train/y_train.txt")
trainingSubjects <- read.table("./data/getdata_projectfiles_UCI HAR Dataset/UCI HAR Dataset/train/subject_train.txt")
testsetData <- read.table("./data/getdata_projectfiles_UCI HAR Dataset/UCI HAR Dataset/test/X_test.txt")
testLabels <- read.table("./data/getdata_projectfiles_UCI HAR Dataset/UCI HAR Dataset/test/y_test.txt")
testSubjects <- read.table("./data/getdata_projectfiles_UCI HAR Dataset/UCI HAR Dataset/test/subject_test.txt")
activityLabels <-read.table("./data/getdata_projectfiles_UCI HAR Dataset/UCI HAR Dataset/activity_labels.txt")
featuresLabels <- read.table("./data/getdata_projectfiles_UCI HAR Dataset/UCI HAR Dataset/features.txt")
#Assign variable name to each column
names(testsetData) <- featuresLabels$V2
names(trainingsetData) <- featuresLabels$V2
#Assign each activity row record to each subject
trainingsetData <- cbind("Subject"=trainingSubjects$V1,trainingsetData)
testsetData <- cbind("Subject"=testSubjects$V1,testsetData)
rm(trainingSubjects)
rm(testSubjects)
##Merge each data set labels with activity labels.
mergedtrainingLabels <- merge.data.frame(trainingLabels,activityLabels,by.x = "V1",by.y = "V1",all=TRUE)
mergedtestLabels <- merge.data.frame(testLabels,activityLabels,by.x = "V1",by.y = "V1",all=TRUE)
##Remove Unused Objects from workspace
rm(activityLabels)
rm(testLabels)
rm(trainingLabels)
combinedtestsetData <- cbind("Activity"=mergedtestLabels$V2,testsetData)
combinedtrainingsetData <- cbind("Activity"=mergedtrainingLabels$V2,trainingsetData)
rm(testsetData)
rm(trainingsetData)
rm(featuresLabels)
rm(mergedtestLabels)
rm(mergedtrainingLabels)
tidyDataSet <- rbind(combinedtestsetData,combinedtrainingsetData)
rm(combinedtestsetData)
rm(combinedtrainingsetData)
#Once that we have tidy data set then extract only std and mean for each measure.
finalDataSet <- subset(tidyDataSet, select = grep("Activity|Subject|std|mean", names(tidyDataSet)))
rm(test)
##Laro Navamuel 2018
##This scripts follows step to step procedure to create a tidyDataSet
## as part of Getting and Cleaning Data project for Coursera.
##Original data are retrieved from http://archive.ics.uci.edu/ml/datasets/Human+Activity+Recognition+Using+Smartphones
##The data are downloaded from this URL: https://d396qusza40orc.cloudfront.net/getdata%2Fprojectfiles%2FUCI%20HAR%20Dataset.zip
##Our data are stored on data directory where project is located.
# Download data set and unzip it ####
# But first check if the folder with data exists to skipt this step
if (!file.exists('UCI HAR Dataset')) {
dataUrl <- 'https://d396qusza40orc.cloudfront.net/getdata%2Fprojectfiles%2FUCI%20HAR%20Dataset.zip'
tempFile <- tempfile()
download.file(dataUrl, destfile=tempFile, method="curl")
unzip(tempFile)
}
getwd()
Download data set and unzip it ####
# But first check if the folder with data exists to skipt this step
if (!file.exists('.\data\UCI HAR DATASET.zip')) {
dataUrl <- 'https://d396qusza40orc.cloudfront.net/getdata%2Fprojectfiles%2FUCI%20HAR%20Dataset.zip'
download.file(dataUrl, destfile=".\data\UCI HAR DATASET.zip", method="curl")
unzip(destfile)
}
##Our data are stored on data directory where project is located.
setwd("./data")
# Download data set and unzip it ####
# But first check if the folder with data exists to skipt this step
if (!file.exists("UCI_HAR_DATASET.zip")) {
dataUrl <- 'https://d396qusza40orc.cloudfront.net/getdata%2Fprojectfiles%2FUCI%20HAR%20Dataset.zip'
download.file(dataUrl, destfile="./data/UCI_HAR_DATASET.zip", method="curl")
unzip(destfile)
}
if (!file.exists("UCI_HAR_DATASET.zip")) {
##Our data are stored on data directory where project is located.
setwd("./data")
# Download data set and unzip it ####
# But first check if the folder with data exists to skipt this step
if (!file.exists("data")) {
dataUrl <- 'https://d396qusza40orc.cloudfront.net/getdata%2Fprojectfiles%2FUCI%20HAR%20Dataset.zip'
download.file(dataUrl, destfile="./data/UCI_HAR_DATASET.zip", method="curl")
unzip(destfile)
}
##Our data are stored on data directory where project is located.
setwd("./data")
# Download data set and unzip it ####
# But first check if the folder with data exists to skipt this step
if (!file.exists("data")) {
dataUrl <- 'https://d396qusza40orc.cloudfront.net/getdata%2Fprojectfiles%2FUCI%20HAR%20Dataset.zip'
download.file(dataUrl, destfile="./data/UCI_HAR_DATASET.zip", method="curl")
unzip(destfile)
}
if (!file.exists("data")) {
dir.create("data")
dataUrl <- 'https://d396qusza40orc.cloudfront.net/getdata%2Fprojectfiles%2FUCI%20HAR%20Dataset.zip'
download.file(dataUrl, destfile="./data/UCI_HAR_DATASET.zip", method="curl")
unzip(destfile)
}
if (!file.exists("data")) {
dataUrl <- 'https://d396qusza40orc.cloudfront.net/getdata%2Fprojectfiles%2FUCI%20HAR%20Dataset.zip'
download.file(dataUrl, destfile="./data/UCI_HAR_DATASET.zip", method="curl")
unzip(destfile)
}
if (!file.exists("data")) {
dataUrl <- 'https://d396qusza40orc.cloudfront.net/getdata%2Fprojectfiles%2FUCI%20HAR%20Dataset.zip'
download.file(dataUrl, destfile="./data/UCI_HAR_DATASET.zip", method="curl")
unzip(destfile)
}
file.exists("data")
dataUrl <- 'https://d396qusza40orc.cloudfront.net/getdata%2Fprojectfiles%2FUCI%20HAR%20Dataset.zip'
download.file(dataUrl, destfile="./data/UCI_HAR_DATASET.zip", method="curl")
download.file(dataUrl, destfile="./UCI_HAR_DATASET.zip", method="curl")
download.file(dataUrl, destfile="UCI_HAR_DATASET.zip", method="curl")
download.file(dataUrl, destfile="./UCI_HAR_DATASET.zip", method="curl")
script.dir <- dirname(sys.frame(1)$ofile)
getwd()
download.file(dataUrl, destfile="UCI_HAR_DATASET.zip", method="curl")
dataUrl <- 'https://d396qusza40orc.cloudfront.net/getdata%2Fprojectfiles%2FUCI%20HAR%20Dataset.zip'
download.file(dataUrl, destfile='UCI_DATA.zip', method="curl")
dataUrl <- 'http://d396qusza40orc.cloudfront.net/getdata%2Fprojectfiles%2FUCI%20HAR%20Dataset.zip'
download.file(dataUrl, destfile='UCI_DATA.zip', method="curl")
download.file(dataUrl, destfile='/data/UCI_DATA.zip', method="curl")
download.file(dataUrl, destfile='./data/UCI_DATA.zip', method="curl")
download.file(dataUrl, destfile='/data/UCI_DATA.zip')
download.file(dataUrl, destfile='UCI_DATA.zip')
if (!file.exists("data")) {
dir.create('data')
dataUrl <- 'https://d396qusza40orc.cloudfront.net/getdata%2Fprojectfiles%2FUCI%20HAR%20Dataset.zip'
download.file(dataUrl, destfile="./data/UCI_HAR_DATASET.zip")
unzip(destfile)
}
getwd()
setwd(./data)
setwd('./data')
getwd()
setwd('../data')
getwd()
script.dir <- dirname(sys.frame(1)$ofile)
script.dir <- dirname(sys.frame(1)$run_analisys.R)
DIR  <- dirname(run_analisys.R)
dir
dir()
script.dir <- dirname(sys.frame(1)$ofile)
getwd()
setwd("D:/FORMACION/Data Science Specialization - Josh Hopkins University/PRACTICAS/")
getwd()
if (!file.exists("./data/UCI_HAR_DATASET.zip")) {
dataUrl <- 'https://d396qusza40orc.cloudfront.net/getdata%2Fprojectfiles%2FUCI%20HAR%20Dataset.zip'
download.file(dataUrl, destfile="UCI_HAR_DATASET.zip")
unzip(destfile)
}
source("run_analisys.R")
setwd(script.dir)
source('D:/FORMACION/Data Science Specialization - Josh Hopkins University/PRACTICAS/gettingandcleaningdataProject/run_analysis.R')
getwd()
